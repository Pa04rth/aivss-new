interface Risk {
  severity: "critical" | "high"| "medium" | "low";
  risk?: string; // For static findings
  title?: string; // For contextual findings
  message?: string; // For static findings
  description?: string; // For contextual findings
}

interface Props {
  risks: Risk[];
}

const severityClasses = {
  critical: "!bg-red-100 text-red-800 border-red-200",
  medium: "!bg-yellow-100 text-yellow-800 border-yellow-200",
  high: "!bg-orange-100 text-orange-800 border-orange-200",
  low: "!bg-blue-100 text-blue-800 border-blue-200",
};

export default function VulnerabilityList({ risks }: Props) {
  if (!risks || risks.length === 0) {
    return (
      <p className="text-sm text-gray-700">
        No vulnerabilities detected in this scan.
      </p>
    );
  }

  return (
    <div className="space-y-4">
      <h3 className="font-semibold text-lg text-gray-800">
        Top Vulnerabilities
      </h3>
      {risks.slice(0, 5).map((risk, index) => (
        <div
          key={index}
          className={`p-4 border rounded-lg ${severityClasses[risk.severity]}`}
        >
          <div className="flex items-center gap-3">
            <span
              style={{
                backgroundColor: risk.severity === 'critical' ? '#dc2626' : 
                                risk.severity === 'high' ? '#ea580c' : 
                                risk.severity === 'medium' ? '#d97706' : '#2563eb',
                color: 'white',
                padding: '4px 8px',
                borderRadius: '9999px',
                fontSize: '12px',
                fontWeight: '600'
              }}
              className="inline-block capitalize"
            >
              {risk.severity}
            </span>
            {/* Display title from contextual finding or risk from static finding */}
            <h4 className="font-bold text-gray-800">
              {risk.title || risk.risk}
            </h4>
          </div>
          <p className="text-sm text-gray-700 mt-2">
            {/* Display description from contextual finding or message from static finding */}
            {risk.description || risk.message}
          </p>
        </div>
      ))}
    </div>
  );
}
